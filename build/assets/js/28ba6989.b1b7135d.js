"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[475],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,y=p["".concat(l,".").concat(d)]||p[d]||u[d]||o;return n?r.createElement(y,a(a({ref:t},m),{},{components:n})):r.createElement(y,a({ref:t},m))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},983:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={title:"Moving Files"},a=void 0,c={unversionedId:"services/dynamic/implementation/Moving-Files",id:"services/dynamic/implementation/Moving-Files",title:"Moving Files",description:"Getting started",source:"@site/docs/services/dynamic/implementation/Moving-Files.md",sourceDirName:"services/dynamic/implementation",slug:"/services/dynamic/implementation/Moving-Files",permalink:"/docs/services/dynamic/implementation/Moving-Files",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dynamic/implementation/Moving-Files.md",tags:[],version:"current",frontMatter:{title:"Moving Files"},sidebar:"sdkSidebar",previous:{title:"Performance modes",permalink:"/docs/services/dynamic/implementation/configuration/modes"},next:{title:"Worker Registration",permalink:"/docs/services/dynamic/implementation/Worker-Registration"}},l={},s=[{value:"Getting started",id:"getting-started",level:2},{value:"Step 1",id:"step-1",level:3}],m={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("h3",{id:"step-1"},"Step 1"),(0,i.kt)("p",null,'We need to locate the directory where you want to have dynamic in. For this example, our workspace directory is "clippy". '),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd clippy\n")),(0,i.kt)("p",null,"You should now move your bundle files into the directory. "),(0,i.kt)("p",null,"There should be 5 bundled scripts."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"dynamic.client.js"),(0,i.kt)("li",{parentName:"ul"},"dynamic.handler.js"),(0,i.kt)("li",{parentName:"ul"},"dynamic.worker.js"),(0,i.kt)("li",{parentName:"ul"},"dynamic.config.js"),(0,i.kt)("li",{parentName:"ul"},"dynamic.mutation.js")),(0,i.kt)("p",null,"Now, you can drag and drop the files into ",(0,i.kt)("inlineCode",{parentName:"p"},"public/dynamic/"),", or you can use the command line. (If you have a different directory structure, you can change the path to the directory you want to move the files to. Make sure to modify the path in the config as well, if you don't use ",(0,i.kt)("inlineCode",{parentName:"p"},"/dynamic/"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mv dynamic.client.js public/dynamic/ && mv dynamic.handler.js public/dynamic/ && mv dynamic.worker.js public/dynamic/ && mv dynamic.config.js public/dynamic/ && mv dynamic.mutation.js public/dynamic/\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u2139 ",(0,i.kt)("strong",{parentName:"p"},"Note: these files will need to be accessible to the client, so you should put them in a public static directory."))))}u.isMDXComponent=!0}}]);