"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8390],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||a;return t?i.createElement(f,o(o({ref:n},m),{},{components:t})):i.createElement(f,o({ref:n},m))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8197:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var i=t(7462),r=(t(7294),t(3905));const a={title:"Configuring Dynamic"},o=void 0,c={unversionedId:"services/dynamic/implementation/Configuring-Dynamic",id:"services/dynamic/implementation/Configuring-Dynamic",title:"Configuring Dynamic",description:"Configuration",source:"@site/docs/services/dynamic/implementation/Configuring-Dynamic.md",sourceDirName:"services/dynamic/implementation",slug:"/services/dynamic/implementation/Configuring-Dynamic",permalink:"/docs/services/dynamic/implementation/Configuring-Dynamic",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dynamic/implementation/Configuring-Dynamic.md",tags:[],version:"current",frontMatter:{title:"Configuring Dynamic"},sidebar:"sdkSidebar",previous:{title:"Getting Started",permalink:"/docs/services/dynamic/implementation/Getting-Started"},next:{title:"Bare version and path",permalink:"/docs/services/dynamic/implementation/configuration/bare"}},l={},s=[{value:"Configuration",id:"configuration",level:2},{value:"Config explanation",id:"config-explanation",level:3}],m={toc:s},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Dyanmic can be configured by modifying the dynamic.config.js file. "),(0,r.kt)("p",null,"We provide you with the optimal default settings for the best ballence between the fastest and stealthiest browsing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\nself.__dynamic$config = {\n  prefix: '/service/',\n  encoding: 'xor',\n  mode: 'production', \n  logLevel: 0, \n  bare: {\n    version: 2, \n    path: '/bare/',\n  },\n  tab: {\n    title: 'Service',\n    icon: null,\n    ua: null,\n  },\n  assets: {\n    prefix: '/dynamic/',\n    files: {\n      handler: 'dynamic.handler.js',\n      client: 'dynamic.client.js',\n      worker: 'dynamic.worker.js',\n      config: 'dynamic.config.js',\n      inject: null,\n    }\n  },\n  block: [\n  \n  ]\n};\n\n\n")),(0,r.kt)("h3",{id:"config-explanation"},"Config explanation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," This is a very brief explanation. Look into Configuration for more indepth explanations. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"}," prefix: '/service/', // This needs to match the prefix for the service worker\n  encoding: 'xor', // This is the encoding that Dynamic will use to encode URLs it rewrites. plain, base64, XOR, or none.\n  mode: 'production', // The mode that dynamic operates in. - production, development. \n  logLevel: 0, \n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  bare: {\n    version: 2, // If you used Ultraviolet before Dynamic, these settings will be familiar to you. You should leave them default.\n    path: '/bare/',\n  },\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  tab: {\n    title: 'Service',\n    icon: null, // set null for no changes to be made\n    ua: null, // set null for no changes to be made ^\n  },\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"    assets: {       // Unless you are seperating Dynamics assets into different directories, leave this stuff default.\n    prefix: '/dynamic/',\n    files: {\n      handler: 'dynamic.handler.js',\n      client: 'dynamic.client.js',\n      worker: 'dynamic.worker.js',\n      config: 'dynamic.config.js',\n      inject: null,\n    }\n  },\n")))}p.isMDXComponent=!0}}]);