"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2547],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),y=a,p=d["".concat(c,".").concat(y)]||d[y]||m[y]||i;return n?r.createElement(p,o(o({ref:t},u),{},{components:n})):r.createElement(p,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={title:"Dynamic CLI"},o=void 0,l={unversionedId:"services/dynamic/guides/cli",id:"services/dynamic/guides/cli",title:"Dynamic CLI",description:"Dynamic CLI is exactly what it sounds like. It's a command line based interface for Dynamic proxy. It is the easiest way to get started with Dynamic.",source:"@site/docs/services/dynamic/guides/cli.md",sourceDirName:"services/dynamic/guides",slug:"/services/dynamic/guides/cli",permalink:"/docs/services/dynamic/guides/cli",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dynamic/guides/cli.md",tags:[],version:"current",frontMatter:{title:"Dynamic CLI"},sidebar:"sdkSidebar",previous:{title:"dynamic",permalink:"/docs/services/dynamic/"},next:{title:"Configuration",permalink:"/docs/services/dynamic/guides/configuration"}},c={},s=[{value:"Installation",id:"installation",level:2},{value:"Dynamic Autostart",id:"dynamic-autostart",level:2},{value:"Manual Methods",id:"manual-methods",level:2},{value:"Why use the CLI?",id:"why-use-the-cli",level:2},{value:"Why not use the CLI?",id:"why-not-use-the-cli",level:2}],u={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Dynamic CLI is exactly what it sounds like. It's a command line based interface for Dynamic proxy. It is the easiest way to get started with Dynamic."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm i @greenydeveloper/dynamic-cli -g \n// If you want to use NPX instead, remove -g\n")),(0,a.kt)("h2",{id:"dynamic-autostart"},"Dynamic Autostart"),(0,a.kt)("p",null,"DynamicCLIs auto command will automatically download, install, and start Dynamic. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dynamic auto --start\n")),(0,a.kt)("p",null,"This is the absolute easiest for beginners to get started with Dynamic."),(0,a.kt)("h2",{id:"manual-methods"},"Manual Methods"),(0,a.kt)("p",null,"Download Dynamic via (This will clone the latest version of Dynamic to your current directory)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo dynamic download\n")),(0,a.kt)("p",null,"Change directory to the Dynamic folder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd dynamic\n")),(0,a.kt)("p",null,"Install dependencies and start the server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dynamic install && dynamic start\n")),(0,a.kt)("h2",{id:"why-use-the-cli"},"Why use the CLI?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The CLI is the easiest way to get started with Dynamic")),(0,a.kt)("h2",{id:"why-not-use-the-cli"},"Why not use the CLI?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The CLI may not be the best approach over using git and npm.")))}m.isMDXComponent=!0}}]);