"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6452],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Using PM2 for headless"},o=void 0,s={unversionedId:"services/dynamic/guides/headless/pm2",id:"services/dynamic/guides/headless/pm2",title:"Using PM2 for headless",description:"Running an NPM Application with PM2",source:"@site/docs/services/dynamic/guides/headless/pm2.md",sourceDirName:"services/dynamic/guides/headless",slug:"/services/dynamic/guides/headless/pm2",permalink:"/docs/services/dynamic/guides/headless/pm2",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dynamic/guides/headless/pm2.md",tags:[],version:"current",frontMatter:{title:"Using PM2 for headless"},sidebar:"sdkSidebar",previous:{title:"Headless Dynamic",permalink:"/docs/services/dynamic/guides/headless/"},next:{title:"Using Screen to run Dynamic",permalink:"/docs/services/dynamic/guides/headless/screen"}},l={},p=[{value:"Running an NPM Application with PM2",id:"running-an-npm-application-with-pm2",level:2},{value:"Step 1: Install PM2",id:"step-1-install-pm2",level:3},{value:"Step 2: Set up your NPM application",id:"step-2-set-up-your-npm-application",level:3},{value:"Step 3: Start your application with PM2",id:"step-3-start-your-application-with-pm2",level:3},{value:"Step 5: Monitor your application",id:"step-5-monitor-your-application",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"running-an-npm-application-with-pm2"},"Running an NPM Application with PM2"),(0,r.kt)("p",null,"In this tutorial, we'll go through the process of running Dynamic using PM2. PM2 is a process manager for Node.js applications that allows you to easily manage and monitor your Node.js processes."),(0,r.kt)("h3",{id:"step-1-install-pm2"},"Step 1: Install PM2"),(0,r.kt)("p",null,"Open a terminal or command prompt and run the following command to install PM2 globally on your system:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g pm2\n")),(0,r.kt)("p",null,"This command will install PM2 globally, making it accessible from anywhere on your system."),(0,r.kt)("h3",{id:"step-2-set-up-your-npm-application"},"Step 2: Set up your NPM application"),(0,r.kt)("p",null,"Assuming you already have an NPM application set up, navigate to the root directory of your application using the terminal or command prompt."),(0,r.kt)("h3",{id:"step-3-start-your-application-with-pm2"},"Step 3: Start your application with PM2"),(0,r.kt)("p",null,"To start your application with PM2, use the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pm2 start "npm start" --name "DynamicProxy"\n')),(0,r.kt)("h3",{id:"step-5-monitor-your-application"},"Step 5: Monitor your application"),(0,r.kt)("p",null,"PM2 provides a monitoring dashboard where you can view the status and logs of your running applications. To access the dashboard, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 monit\n")),(0,r.kt)("p",null,"This will open a terminal-based dashboard showing real-time monitoring information about your application. You can use various keyboard shortcuts to navigate and interact with the dashboard."))}m.isMDXComponent=!0}}]);