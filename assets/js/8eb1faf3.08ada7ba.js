"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6953],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),m=s,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5430:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(7462),s=(n(7294),n(3905));const a={title:"Using Screen to run Dynamic"},i=void 0,o={unversionedId:"services/dynamic/guides/headless/screen",id:"services/dynamic/guides/headless/screen",title:"Using Screen to run Dynamic",description:"Intro",source:"@site/docs/services/dynamic/guides/headless/screen.md",sourceDirName:"services/dynamic/guides/headless",slug:"/services/dynamic/guides/headless/screen",permalink:"/docs/services/dynamic/guides/headless/screen",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dynamic/guides/headless/screen.md",tags:[],version:"current",frontMatter:{title:"Using Screen to run Dynamic"},sidebar:"sdkSidebar",previous:{title:"Using PM2 for headless",permalink:"/docs/services/dynamic/guides/headless/pm2"},next:{title:"Supported sites",permalink:"/docs/services/dynamic/support"}},c={},l=[{value:"Intro",id:"intro",level:2},{value:"Step 1: Install Screen",id:"step-1-install-screen",level:3},{value:"Step 2: start a screen session",id:"step-2-start-a-screen-session",level:3},{value:"Step 3: Change directory to Dynamic",id:"step-3-change-directory-to-dynamic",level:3},{value:"Step 4: Start Dynamic",id:"step-4-start-dynamic",level:3},{value:"Step 5: Detach from the screen session",id:"step-5-detach-from-the-screen-session",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"intro"},"Intro"),(0,s.kt)("p",null,"In this tutorial, we will explore how to run the npm start command in a detached screen session, allowing it to run in the background even if you close the terminal or disconnect from the server. This is useful for running server-side applications or processes that need to continue running even after you log out."),(0,s.kt)("h3",{id:"step-1-install-screen"},"Step 1: Install Screen"),(0,s.kt)("p",null,"Open a terminal or command prompt and run the following command to install screen globally on your system:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install screen\n")),(0,s.kt)("p",null,"This command will install screen globally, making it accessible from anywhere on your system."),(0,s.kt)("h3",{id:"step-2-start-a-screen-session"},"Step 2: start a screen session"),(0,s.kt)("p",null,"Create a new screen session: In the terminal, run the following command to create a new detached screen session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"screen -S Dynamic\n")),(0,s.kt)("h3",{id:"step-3-change-directory-to-dynamic"},"Step 3: Change directory to Dynamic"),(0,s.kt)("p",null,"Change directory to the Dynamic folder"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cd dynamic\n")),(0,s.kt)("h3",{id:"step-4-start-dynamic"},"Step 4: Start Dynamic"),(0,s.kt)("p",null,"Start Dynamic"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,s.kt)("h3",{id:"step-5-detach-from-the-screen-session"},"Step 5: Detach from the screen session"),(0,s.kt)("p",null,"Detach from the screen session by pressing Ctrl + A and then D. This will return you to your normal terminal session."))}d.isMDXComponent=!0}}]);